"""Initial migration

Revision ID: 6b666da9f6ed
Revises: 
Create Date: 2025-03-05 05:35:45.623635+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6b666da9f6ed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('position_type', sa.Enum('LONG', 'SHORT', name='positiontype'), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'PENDING', name='positionstatus'), nullable=True),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=False),
    sa.Column('stop_loss', sa.Float(), nullable=False),
    sa.Column('take_profit', sa.Float(), nullable=False),
    sa.Column('size', sa.Float(), nullable=False),
    sa.Column('pnl', sa.Float(), nullable=True),
    sa.Column('timeframe', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exit_signals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.Column('signal_type', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_structures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.Column('timeframe', sa.String(), nullable=False),
    sa.Column('structure_type', sa.Enum('BULLISH', 'BEARISH', 'NEUTRAL', 'SHIFTING', name='marketstructure'), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('smart_money_traps', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fair_value_gaps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('market_structure_id', sa.Integer(), nullable=True),
    sa.Column('gap_type', sa.String(), nullable=False),
    sa.Column('upper_price', sa.Float(), nullable=False),
    sa.Column('lower_price', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_structure_id'], ['market_structures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liquidity_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('market_structure_id', sa.Integer(), nullable=True),
    sa.Column('level_type', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('strength', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_structure_id'], ['market_structures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_blocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('market_structure_id', sa.Integer(), nullable=True),
    sa.Column('block_type', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('strength', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['market_structure_id'], ['market_structures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_blocks')
    op.drop_table('liquidity_levels')
    op.drop_table('fair_value_gaps')
    op.drop_table('market_structures')
    op.drop_table('exit_signals')
    op.drop_table('positions')
    # ### end Alembic commands ### 